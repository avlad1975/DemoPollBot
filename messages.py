import random
from constant import dogon, fanny, fuck
from emoji import emojize


def first_poll_message(log_data):
    main_str = []
    f_message = '<b>–ì–æ—Ç–æ–≤–∏–º –ø–∞—Ä—É ' + log_data.name + '</b>'
    f_message = f_message + ' ' + emojize(log_data.em1, use_aliases=True) + '<b>/</b>' + emojize(log_data.em2,
                                                                                                 use_aliases=True)
    main_str.append(f_message)
    main_str = '\n'.join(main_str)  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ 1-–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    return main_str


def second_poll_message(link):  # –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    main_str = []
    s_message = '\n<a href="' + link + '">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É </a>üìä\n'
    s_message = s_message + '\n<b>–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã, –∏ –ø—Ä–æ–≥–æ–ª–æ—Å—É–π—Ç–µ –≤ –æ–ø—Ä–æ—Å–µ –Ω–∏–∂–µ üëá</b>'
    main_str.append(s_message)
    main_str = '\n'.join(main_str)  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ 2-–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    return main_str


def none_poll_message():  # –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    main_str = []
    s_message = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: <b>5–û% –ø—Ä–æ–¥–∞–∂–∞ üî¥ / 5–û% –ø–æ–∫—É–ø–∫–∞ üü¢</b>'
    s_message = s_message + '\n<b>–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Ö–æ–¥ –≤ —Ä—ã–Ω–æ–∫ ‚ùó</b>'
    main_str.append(s_message)
    main_str = '\n'.join(main_str)  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ 2-–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    return main_str


def third_poll_message(log_data):  # –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    main_str = []
    s_message = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:'
    o_text = ' <b>–í—Ö–æ–¥ –í–ù–ò–ó (–ü—Ä–æ–¥–∞–∂–∞)</b>'
    o_zy = ":red_circle:"
    if '–ü–û–ö–£–ü–ê–¢–¨' in log_data.resume:  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ –¥–ª—è –ø–∞—Ä—ã –ê–∫—Ç–∏–≤–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å
        o_zy = ":green_circle:"
        o_text = ' <b>–í—Ö–æ–¥ –í–í–ï–†–• (–ü–æ–∫—É–ø–∫–∞)</b>'
    s_message = s_message + '<b>' + o_text + '</b>' + ' ' + emojize(o_zy, use_aliases=True) + '\n'
    s_message = s_message + '\n–¶–µ–Ω–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–∞: <b>' + str(log_data.price) + '</b>'
    s_message = s_message + '\n–í—Ä–µ–º—è —Å–¥–µ–ª–∫–∏: <b>5 –º–∏–Ω—É—Ç </b>üïî'
    main_str.append(s_message)
    main_str = '\n'.join(main_str)  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ 2-–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    return main_str


def fourth_poll_message(log_data):  # —Ç—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º (–¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ)
    i_text = []
    itog_em = ''
    signal = ''
    if log_data.plus:
        itog_em = random.choice(fanny)
        signal = '–ü–õ–Æ–°'
    elif log_data.vozvrat:
        itog_em = random.choice(fanny)
        signal = '–í–û–ó–í–†–ê–¢'
    s_message = '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> '
    s_message = s_message + emojize(log_data.em1, use_aliases=True) + '<b>/</b>'
    s_message = s_message + emojize(log_data.em2, use_aliases=True)
    s_message = s_message + '\n–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>' + str(log_data.itg_price) + '</b>'
    s_message = s_message + '\n–ò—Ç–æ–≥ –ø—Ä–æ–≥–Ω–æ–∑–∞: <b>' + signal + '</b>' + ' ' + emojize(itog_em, use_aliases=True)
    i_text.append(s_message)
    return '\n'.join(i_text)


def dogon_poll_message(log_data, link):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–≥–æ–Ω–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    i_text = []
    s_message = '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> '
    s_message = s_message + ' ' + emojize(log_data.em1, use_aliases=True) + '<b>/</b>'
    s_message = s_message + ' ' + emojize(log_data.em2, use_aliases=True)
    s_message = s_message + '\n–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>' + str(log_data.itg_price) + '</b>'
    s_message = s_message + '\n–ò—Ç–æ–≥ –ø—Ä–æ–≥–Ω–æ–∑–∞: <b>–ú–ò–ù–£–° ‚ùå</b>\n'
    s_message = s_message + '\n<a href="' + link + '">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É </a>üìä\n'
    s_message = s_message + '\n<b>–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä—ã, –∏ –ø—Ä–æ–≥–æ–ª–æ—Å—É–π—Ç–µ –≤ –æ–ø—Ä–æ—Å–µ –Ω–∏–∂–µ üëá</b>'
    i_text.append(s_message)
    return '\n'.join(i_text)


def dogon_poll_sec_message(log_data):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–≥–æ–Ω–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º (—Ä—É—á–Ω–æ–π —Ç—Ä–µ–π–¥–∏–Ω–≥)
    dogon_text = []
    dg_message = ''
    if log_data.buy:
        napr = "–í—Ö–æ–¥ –í–í–ï–†–• (–ü–æ–∫—É–ø–∫–∞) üü¢"
    else:
        napr = "–í—Ö–æ–¥ –í–ù–ò–ó (–ü—Ä–æ–¥–∞–∂–∞) üî¥"
    if log_data.dgn_price1 > 0:
        dg_message = dg_message + '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: <b>' + napr + ' </b>\n'
        dg_message = dg_message + '\n–¶–µ–Ω–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–∞: <b>' + str(log_data.dgn_price1) + '</b>'
        dg_message = dg_message + '\n–í—Ä–µ–º—è –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è: <b>3 –º–∏–Ω—É—Ç—ã üïî</b>'
    dogon_text.append(dg_message)
    return '\n'.join(dogon_text)


def itog_poll_dogon_message(log_data):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏—Ç–æ–≥–µ –¥–æ–≥–æ–Ω–∞ (–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
    dgn_res = 0
    itog_text_dogon = []
    if log_data.buy:
        dgn_res = log_data.dgn_itg1 - log_data.dgn_price1
    elif log_data.sell:
        dgn_res = log_data.dgn_price1 - log_data.dgn_itg1
    if dgn_res > 0:
        log_data.plus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ü–õ–Æ–°
    if dgn_res > 0:
        itog_dogon = ' –ü–õ–Æ–° ‚úÖ'
        log_data.plus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ü–õ–Æ–°
    else:
        itog_dogon = "–ú–ò–ù–£–° ‚ùå"
        log_data.minus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ú–ò–ù–£–°
    dogon_str = '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> ' + ' ' + emojize(
        log_data.em1, use_aliases=True)
    dogon_str = dogon_str + '<b>/</b>' + ' ' + emojize(log_data.em2, use_aliases=True)
    dogon_str = dogon_str + '\n–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>' + str(log_data.dgn_itg1) + '</b>'
    dogon_str = dogon_str + '\n–ò—Ç–æ–≥ –ø—Ä–æ–≥–Ω–æ–∑–∞: <b>' + itog_dogon + '</b>'
    # dogon_str = dogon_str + ' ' + emojize(f_emodi, use_aliases=True)
    itog_text_dogon.append(dogon_str)
    return '\n'.join(itog_text_dogon)


def itog_sec_dogon_message(log_data):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏—Ç–æ–≥–µ –¥–æ–≥–æ–Ω–∞ (–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
    dgn_res = 0
    itog_text_dogon = []
    if log_data.buy:
        dgn_res = log_data.dgn_itg2 - log_data.dgn_price2
    elif log_data.sell:
        dgn_res = log_data.dgn_price2 - log_data.dgn_itg2
    if dgn_res > 0:
        itog_dogon = '–ü–õ–Æ–°'
        log_data.plus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ü–õ–Æ–°
        f_emodi = random.choice(fanny)
    else:
        itog_dogon = "–ú–ò–ù–£–°"
        log_data.minus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ú–ò–ù–£–°
        f_emodi = random.choice(fuck)
    dogon_str = '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> ' + ' ' + emojize(
        log_data.em1, use_aliases=True)
    dogon_str = dogon_str + '<b>/</b>' + ' ' + emojize(log_data.em2, use_aliases=True)
    dogon_str = dogon_str + '\n–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>' + str(log_data.dgn_itg2) + '</b>'
    dogon_str = dogon_str + '\n–ò—Ç–æ–≥ –ø—Ä–æ–≥–Ω–æ–∑–∞: <b>' + itog_dogon + '</b>'
    dogon_str = dogon_str + ' ' + emojize(f_emodi, use_aliases=True)
    itog_text_dogon.append(dogon_str)
    return '\n'.join(itog_text_dogon)


def bug_message(picture, bot, channel_id):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–≥–µ
    i_text = []
    b_message = '<b> –°–±–æ–π —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∫–æ—Ç–∏—Ä–æ–≤–æ–∫</b>'
    b_message = b_message + '\n<b> –ò—â—É –¥—Ä—É–≥—É—é –ø–∞—Ä—É</b>'
    i_text.append(b_message)
    i_text.append('<a href="' + picture + '">&#8205;</a>')
    bug_text = '\n'.join(i_text)
    bot.send_message(channel_id, bug_text, disable_web_page_preview=False,
                     parse_mode='HTML')  # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –±–∞–≥–µ
    return


def second_message(log_data):  # –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –≤ –∏—Å–ø–∞–Ω–æ—è–∑—ã—á–Ω—ã–π –∫–∞–Ω–∞–ª
    main_str = []
    s_message = ''
    o_text = '–ü–†–û–î–ê–í–ê–¢–¨'
    o_picture = '<a href="' + log_data.p_sell + '">&#8205;</a>'
    o_zy = ":red_circle:"
    if '–ü–û–ö–£–ü–ê–¢–¨' in log_data.resume:  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ –¥–ª—è –ø–∞—Ä—ã –ê–∫—Ç–∏–≤–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å
        o_zy = ":green_circle:"
        o_picture = '<a href="' + log_data.p_buy + '">&#8205;</a>'
        o_text = '–ü–û–ö–£–ü–ê–¢–¨'
    # s_message = s_message + '\n2. –°–∏–≥–Ω–∞–ª –æ—Ç —Ä–æ–±–æ—Ç–∞: <i>( –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ )üöÄ</i>'
    s_message = s_message + '\n–°–∏–≥–Ω–∞–ª –æ—Ç —Ä–æ–±–æ—Ç–∞: <b>' + o_text + '</b>' + emojize(o_zy,
                                                                                  use_aliases=True)
    s_message = s_message + '\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: <b>' + str(log_data.price) + '</b>'

    s_message = s_message + '\n–í—Ä–µ–º—è –æ–ø—Ü–∏–æ–Ω–∞: <b>' + log_data.str_time + '</b>' + emojize(":stopwatch:",
                                                                                          use_aliases=True) + '\n'
    s_message = s_message + '\n<b>–£—Ä–æ–≤–Ω–∏:</b> \n'
    s_message = s_message + '–õ–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏:  <i><a href="https://t.me/SmokeFXchatbot">' \
                            '( –î–æ—Å—Ç—É–ø–Ω–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞–º ) </a></i>üìâ\n'
    s_message = s_message + '–õ–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è:  <i><a href="https://t.me/SmokeFXchatbot">' \
                            '( –î–æ—Å—Ç—É–ø–Ω–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞–º ) </a></i>üìà\n'
    s_message = s_message + '\n<b>–¢–æ—á–∫–∏ —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ —Ü–µ–Ω—ã:</b>\n'
    s_message = s_message + '–ö–æ—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ #1: <i><a href="https://t.me/SmokeFXchatbot">' \
                            '( –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ ) </a></i>üö´\n'
    s_message = s_message + '–ö–æ—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ #2: <i><a href="https://t.me/SmokeFXchatbot">' \
                            '( –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ ) </a></i>üö´\n'
    s_message = s_message + '\n–°–∏–ª–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –≤ —Å—Ç–æ—Ä–æ–Ω—É –≤—Ö–æ–¥–∞: <i>' \
                            '<a href="https://t.me/SmokeFXchatbot">( –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ ) ‚ùó</a></i>\n'
    s_message = s_message + '\n<i>–†–µ–∑—é–º–µ: <a href="https://t.me/SmokeFXchatbot">( –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ ) </a></i>üéØ'
    main_str.append(s_message)
    main_str.append(o_picture)
    main_str = '\n'.join(main_str)  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤—ã–≤–æ–¥–∞ 2-–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    return main_str


def third_message(log_data):  # —Ç—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –≤ –∏—Å–ø–∞–Ω–æ—è–∑—ã—á–Ω—ã–π –∫–∞–Ω–∞–ª(–¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ)
    i_text = []
    itog_em = ''
    itg_picture = ''
    signal = ''
    if log_data.plus:
        itog_em = random.choice(fanny)
        itg_picture = '<a href="' + log_data.p_plus + '">&#8205;</a>'
        signal = '–ü–õ–Æ–°'
    elif log_data.vozvrat:
        itog_em = random.choice(fanny)
        itg_picture = '<a href="' + log_data.p_vozvrat + '">&#8205;</a>'
        signal = '–í–û–ó–í–†–ê–¢'
    if log_data.buy:
        em = ":small_red_triangle:"
    else:
        em = ":small_red_triangle_down:"
    s_message = '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> '
    s_message = s_message + emojize(log_data.em1, use_aliases=True) + '<b>/</b>'
    s_message = s_message + emojize(log_data.em2, use_aliases=True) + emojize(em, use_aliases=True)
    s_message = s_message + '\n–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>' + str(log_data.itg_price) + '</b>'
    s_message = s_message + '\n–ò—Ç–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: <b>' + signal + '</b>' + emojize(itog_em,
                                                                              use_aliases=True)
    i_text.append(s_message)
    i_text.append(itg_picture)
    return '\n'.join(i_text)


def dogon_message(
        log_data):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–≥–æ–Ω–µ –≤ –∏—Å–ø–∞–Ω–æ—è–∑—ã—á–Ω—ã–π –∫–∞–Ω–∞–ª (–¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ, –≤—Ä–µ–º—è –¥–æ–≥–æ–Ω–∞,—Ü–µ–Ω–∞ –≤—Ö–æ–¥–∞)
    itog_picture = '<a href="' + log_data.p_dgn + '">&#8205;</a>'
    dogon_text = []
    dg_message = ''
    if log_data.buy:
        em = ":small_red_triangle:"
    else:
        em = ":small_red_triangle_down:"
    if log_data.dgn_price == 0:
        dg_message = '<b>–ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞ üéØ\n</b>'
        # dg_message = dg_message + '<b>–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞.\n</b>'
        # dg_message = dg_message + '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> '
        # dg_message = dg_message + emojize(log_data.em1, use_aliases=True) + '<b>/</b>'
        # dg_message = dg_message + emojize(log_data.em2, use_aliases=True) + emojize(em, use_aliases=True)
    if log_data.dgn_price > 0:
        dg_message = dg_message + '\n–ò—Ç–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: <b>–ü–ï–†–ï–ö–†–´–¢–ò–ï </b>' + emojize(random.choice(dogon), use_aliases=True)
        dg_message = dg_message + '\n–¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: <b>' + str(log_data.dgn_price) + '</b>'
        dg_message = dg_message + '\n–í—Ä–µ–º—è –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è: <b>' + log_data.str_dgn_time + '</b>'
    dogon_text.append(dg_message)
    if log_data.dgn_price > 0:
        dogon_text.append(itog_picture)
    return '\n'.join(dogon_text)


def itog_dogon_message(
        log_data):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏—Ç–æ–≥–µ –¥–æ–≥–æ–Ω–∞ –¥–ª—è –∏—Å–ø–∞–Ω–æ—è–∑—ã—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞(–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
    dgn_res = 0
    itog_text_dogon = []
    if log_data.buy:
        dgn_res = log_data.dgn_itg - log_data.dgn_price
    elif log_data.sell:
        dgn_res = log_data.dgn_price - log_data.dgn_itg
    if dgn_res > 0:
        itog_dogon = '–ü–õ–Æ–°'
        log_data.plus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ü–õ–Æ–°
        f_emodi = random.choice(fanny)
        res_dogon = '<a href="' + log_data.p_plus + '">&#8205;</a>'
    else:
        itog_dogon = "–ü–µ—Ä–≤–æ–µ –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ –ú–ò–ù–£–°"
        log_data.minus = True  # –í–Ω–µ—Å–µ–Ω–∏–µ –≤ –ª–æ–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ú–ò–ù–£–°
        f_emodi = random.choice(fuck)
        res_dogon = '<a href="' + log_data.p_minus + '">&#8205;</a>'
    dogon_str = '–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + '<b>' + log_data.name + '</b> ' + emojize(
        log_data.em1, use_aliases=True)
    dogon_str = dogon_str + '<b>/</b>' + emojize(log_data.em2, use_aliases=True)
    dogon_str = dogon_str + '\n–¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>' + str(log_data.dgn_itg) + '</b>'
    dogon_str = dogon_str + '\n–ò—Ç–æ–≥ —Å–∏–≥–Ω–∞–ª–∞: <b>' + itog_dogon + '</b>'
    dogon_str = dogon_str + emojize(f_emodi, use_aliases=True)
    itog_text_dogon.append(dogon_str)
    itog_text_dogon.append(res_dogon)
    return '\n'.join(itog_text_dogon)


def first_message(log_data):  # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    f_message = '<b>–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞ ' + log_data.name + '</b>'
    f_message = f_message + emojize(log_data.em1, use_aliases=True) + '<b>/</b>' + emojize(log_data.em2,
                                                                                           use_aliases=True)
    return f_message
